// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bmservice.proto

package lv.jing.taichi.web;

public final class RPCBitmap {
  private RPCBitmap() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface BitmapRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RPCBitmap.BitmapRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string bizname = 1;</code>
     */
    java.lang.String getBizname();
    /**
     * <code>string bizname = 1;</code>
     */
    com.google.protobuf.ByteString
        getBiznameBytes();

    /**
     * <code>string date = 2;</code>
     */
    java.lang.String getDate();
    /**
     * <code>string date = 2;</code>
     */
    com.google.protobuf.ByteString
        getDateBytes();
  }
  /**
   * <pre>
   * The request message containing the user's name.
   * </pre>
   *
   * Protobuf type {@code RPCBitmap.BitmapRequest}
   */
  public  static final class BitmapRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RPCBitmap.BitmapRequest)
      BitmapRequestOrBuilder {
    // Use BitmapRequest.newBuilder() to construct.
    private BitmapRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BitmapRequest() {
      bizname_ = "";
      date_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private BitmapRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              bizname_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              date_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lv.jing.taichi.web.RPCBitmap.internal_static_RPCBitmap_BitmapRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lv.jing.taichi.web.RPCBitmap.internal_static_RPCBitmap_BitmapRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lv.jing.taichi.web.RPCBitmap.BitmapRequest.class, lv.jing.taichi.web.RPCBitmap.BitmapRequest.Builder.class);
    }

    public static final int BIZNAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object bizname_;
    /**
     * <code>string bizname = 1;</code>
     */
    public java.lang.String getBizname() {
      java.lang.Object ref = bizname_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        bizname_ = s;
        return s;
      }
    }
    /**
     * <code>string bizname = 1;</code>
     */
    public com.google.protobuf.ByteString
        getBiznameBytes() {
      java.lang.Object ref = bizname_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bizname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATE_FIELD_NUMBER = 2;
    private volatile java.lang.Object date_;
    /**
     * <code>string date = 2;</code>
     */
    public java.lang.String getDate() {
      java.lang.Object ref = date_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        date_ = s;
        return s;
      }
    }
    /**
     * <code>string date = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDateBytes() {
      java.lang.Object ref = date_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        date_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getBiznameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, bizname_);
      }
      if (!getDateBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, date_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getBiznameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, bizname_);
      }
      if (!getDateBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, date_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof lv.jing.taichi.web.RPCBitmap.BitmapRequest)) {
        return super.equals(obj);
      }
      lv.jing.taichi.web.RPCBitmap.BitmapRequest other = (lv.jing.taichi.web.RPCBitmap.BitmapRequest) obj;

      boolean result = true;
      result = result && getBizname()
          .equals(other.getBizname());
      result = result && getDate()
          .equals(other.getDate());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BIZNAME_FIELD_NUMBER;
      hash = (53 * hash) + getBizname().hashCode();
      hash = (37 * hash) + DATE_FIELD_NUMBER;
      hash = (53 * hash) + getDate().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static lv.jing.taichi.web.RPCBitmap.BitmapRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lv.jing.taichi.web.RPCBitmap.BitmapRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lv.jing.taichi.web.RPCBitmap.BitmapRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lv.jing.taichi.web.RPCBitmap.BitmapRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lv.jing.taichi.web.RPCBitmap.BitmapRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lv.jing.taichi.web.RPCBitmap.BitmapRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static lv.jing.taichi.web.RPCBitmap.BitmapRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static lv.jing.taichi.web.RPCBitmap.BitmapRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static lv.jing.taichi.web.RPCBitmap.BitmapRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lv.jing.taichi.web.RPCBitmap.BitmapRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(lv.jing.taichi.web.RPCBitmap.BitmapRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The request message containing the user's name.
     * </pre>
     *
     * Protobuf type {@code RPCBitmap.BitmapRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RPCBitmap.BitmapRequest)
        lv.jing.taichi.web.RPCBitmap.BitmapRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return lv.jing.taichi.web.RPCBitmap.internal_static_RPCBitmap_BitmapRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return lv.jing.taichi.web.RPCBitmap.internal_static_RPCBitmap_BitmapRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                lv.jing.taichi.web.RPCBitmap.BitmapRequest.class, lv.jing.taichi.web.RPCBitmap.BitmapRequest.Builder.class);
      }

      // Construct using lv.jing.taichi.web.RPCBitmap.BitmapRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        bizname_ = "";

        date_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return lv.jing.taichi.web.RPCBitmap.internal_static_RPCBitmap_BitmapRequest_descriptor;
      }

      public lv.jing.taichi.web.RPCBitmap.BitmapRequest getDefaultInstanceForType() {
        return lv.jing.taichi.web.RPCBitmap.BitmapRequest.getDefaultInstance();
      }

      public lv.jing.taichi.web.RPCBitmap.BitmapRequest build() {
        lv.jing.taichi.web.RPCBitmap.BitmapRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public lv.jing.taichi.web.RPCBitmap.BitmapRequest buildPartial() {
        lv.jing.taichi.web.RPCBitmap.BitmapRequest result = new lv.jing.taichi.web.RPCBitmap.BitmapRequest(this);
        result.bizname_ = bizname_;
        result.date_ = date_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof lv.jing.taichi.web.RPCBitmap.BitmapRequest) {
          return mergeFrom((lv.jing.taichi.web.RPCBitmap.BitmapRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(lv.jing.taichi.web.RPCBitmap.BitmapRequest other) {
        if (other == lv.jing.taichi.web.RPCBitmap.BitmapRequest.getDefaultInstance()) return this;
        if (!other.getBizname().isEmpty()) {
          bizname_ = other.bizname_;
          onChanged();
        }
        if (!other.getDate().isEmpty()) {
          date_ = other.date_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        lv.jing.taichi.web.RPCBitmap.BitmapRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (lv.jing.taichi.web.RPCBitmap.BitmapRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object bizname_ = "";
      /**
       * <code>string bizname = 1;</code>
       */
      public java.lang.String getBizname() {
        java.lang.Object ref = bizname_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          bizname_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string bizname = 1;</code>
       */
      public com.google.protobuf.ByteString
          getBiznameBytes() {
        java.lang.Object ref = bizname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bizname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string bizname = 1;</code>
       */
      public Builder setBizname(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        bizname_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string bizname = 1;</code>
       */
      public Builder clearBizname() {
        
        bizname_ = getDefaultInstance().getBizname();
        onChanged();
        return this;
      }
      /**
       * <code>string bizname = 1;</code>
       */
      public Builder setBiznameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        bizname_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object date_ = "";
      /**
       * <code>string date = 2;</code>
       */
      public java.lang.String getDate() {
        java.lang.Object ref = date_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          date_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string date = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDateBytes() {
        java.lang.Object ref = date_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          date_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string date = 2;</code>
       */
      public Builder setDate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        date_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string date = 2;</code>
       */
      public Builder clearDate() {
        
        date_ = getDefaultInstance().getDate();
        onChanged();
        return this;
      }
      /**
       * <code>string date = 2;</code>
       */
      public Builder setDateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        date_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:RPCBitmap.BitmapRequest)
    }

    // @@protoc_insertion_point(class_scope:RPCBitmap.BitmapRequest)
    private static final lv.jing.taichi.web.RPCBitmap.BitmapRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new lv.jing.taichi.web.RPCBitmap.BitmapRequest();
    }

    public static lv.jing.taichi.web.RPCBitmap.BitmapRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BitmapRequest>
        PARSER = new com.google.protobuf.AbstractParser<BitmapRequest>() {
      public BitmapRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new BitmapRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BitmapRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BitmapRequest> getParserForType() {
      return PARSER;
    }

    public lv.jing.taichi.web.RPCBitmap.BitmapRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BitmapReplyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RPCBitmap.BitmapReply)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 highbits = 1;</code>
     */
    int getHighbits();

    /**
     * <code>map&lt;int32, bytes&gt; bitmaps = 2;</code>
     */
    int getBitmapsCount();
    /**
     * <code>map&lt;int32, bytes&gt; bitmaps = 2;</code>
     */
    boolean containsBitmaps(
        int key);
    /**
     * Use {@link #getBitmapsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
    getBitmaps();
    /**
     * <code>map&lt;int32, bytes&gt; bitmaps = 2;</code>
     */
    java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
    getBitmapsMap();
    /**
     * <code>map&lt;int32, bytes&gt; bitmaps = 2;</code>
     */

    com.google.protobuf.ByteString getBitmapsOrDefault(
        int key,
        com.google.protobuf.ByteString defaultValue);
    /**
     * <code>map&lt;int32, bytes&gt; bitmaps = 2;</code>
     */

    com.google.protobuf.ByteString getBitmapsOrThrow(
        int key);
  }
  /**
   * <pre>
   * The response message containing the greetings
   * </pre>
   *
   * Protobuf type {@code RPCBitmap.BitmapReply}
   */
  public  static final class BitmapReply extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RPCBitmap.BitmapReply)
      BitmapReplyOrBuilder {
    // Use BitmapReply.newBuilder() to construct.
    private BitmapReply(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BitmapReply() {
      highbits_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private BitmapReply(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              highbits_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                bitmaps_ = com.google.protobuf.MapField.newMapField(
                    BitmapsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, com.google.protobuf.ByteString>
              bitmaps__ = input.readMessage(
                  BitmapsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              bitmaps_.getMutableMap().put(
                  bitmaps__.getKey(), bitmaps__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lv.jing.taichi.web.RPCBitmap.internal_static_RPCBitmap_BitmapReply_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetBitmaps();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lv.jing.taichi.web.RPCBitmap.internal_static_RPCBitmap_BitmapReply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lv.jing.taichi.web.RPCBitmap.BitmapReply.class, lv.jing.taichi.web.RPCBitmap.BitmapReply.Builder.class);
    }

    private int bitField0_;
    public static final int HIGHBITS_FIELD_NUMBER = 1;
    private int highbits_;
    /**
     * <code>int32 highbits = 1;</code>
     */
    public int getHighbits() {
      return highbits_;
    }

    public static final int BITMAPS_FIELD_NUMBER = 2;
    private static final class BitmapsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, com.google.protobuf.ByteString>newDefaultInstance(
                  lv.jing.taichi.web.RPCBitmap.internal_static_RPCBitmap_BitmapReply_BitmapsEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, com.google.protobuf.ByteString> bitmaps_;
    private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
    internalGetBitmaps() {
      if (bitmaps_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            BitmapsDefaultEntryHolder.defaultEntry);
      }
      return bitmaps_;
    }

    public int getBitmapsCount() {
      return internalGetBitmaps().getMap().size();
    }
    /**
     * <code>map&lt;int32, bytes&gt; bitmaps = 2;</code>
     */

    public boolean containsBitmaps(
        int key) {
      
      return internalGetBitmaps().getMap().containsKey(key);
    }
    /**
     * Use {@link #getBitmapsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getBitmaps() {
      return getBitmapsMap();
    }
    /**
     * <code>map&lt;int32, bytes&gt; bitmaps = 2;</code>
     */

    public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getBitmapsMap() {
      return internalGetBitmaps().getMap();
    }
    /**
     * <code>map&lt;int32, bytes&gt; bitmaps = 2;</code>
     */

    public com.google.protobuf.ByteString getBitmapsOrDefault(
        int key,
        com.google.protobuf.ByteString defaultValue) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
          internalGetBitmaps().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, bytes&gt; bitmaps = 2;</code>
     */

    public com.google.protobuf.ByteString getBitmapsOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
          internalGetBitmaps().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (highbits_ != 0) {
        output.writeInt32(1, highbits_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetBitmaps(),
          BitmapsDefaultEntryHolder.defaultEntry,
          2);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (highbits_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, highbits_);
      }
      for (java.util.Map.Entry<java.lang.Integer, com.google.protobuf.ByteString> entry
           : internalGetBitmaps().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, com.google.protobuf.ByteString>
        bitmaps__ = BitmapsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, bitmaps__);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof lv.jing.taichi.web.RPCBitmap.BitmapReply)) {
        return super.equals(obj);
      }
      lv.jing.taichi.web.RPCBitmap.BitmapReply other = (lv.jing.taichi.web.RPCBitmap.BitmapReply) obj;

      boolean result = true;
      result = result && (getHighbits()
          == other.getHighbits());
      result = result && internalGetBitmaps().equals(
          other.internalGetBitmaps());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HIGHBITS_FIELD_NUMBER;
      hash = (53 * hash) + getHighbits();
      if (!internalGetBitmaps().getMap().isEmpty()) {
        hash = (37 * hash) + BITMAPS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetBitmaps().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static lv.jing.taichi.web.RPCBitmap.BitmapReply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lv.jing.taichi.web.RPCBitmap.BitmapReply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lv.jing.taichi.web.RPCBitmap.BitmapReply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static lv.jing.taichi.web.RPCBitmap.BitmapReply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static lv.jing.taichi.web.RPCBitmap.BitmapReply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lv.jing.taichi.web.RPCBitmap.BitmapReply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static lv.jing.taichi.web.RPCBitmap.BitmapReply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static lv.jing.taichi.web.RPCBitmap.BitmapReply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static lv.jing.taichi.web.RPCBitmap.BitmapReply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static lv.jing.taichi.web.RPCBitmap.BitmapReply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(lv.jing.taichi.web.RPCBitmap.BitmapReply prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The response message containing the greetings
     * </pre>
     *
     * Protobuf type {@code RPCBitmap.BitmapReply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RPCBitmap.BitmapReply)
        lv.jing.taichi.web.RPCBitmap.BitmapReplyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return lv.jing.taichi.web.RPCBitmap.internal_static_RPCBitmap_BitmapReply_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetBitmaps();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableBitmaps();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return lv.jing.taichi.web.RPCBitmap.internal_static_RPCBitmap_BitmapReply_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                lv.jing.taichi.web.RPCBitmap.BitmapReply.class, lv.jing.taichi.web.RPCBitmap.BitmapReply.Builder.class);
      }

      // Construct using lv.jing.taichi.web.RPCBitmap.BitmapReply.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        highbits_ = 0;

        internalGetMutableBitmaps().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return lv.jing.taichi.web.RPCBitmap.internal_static_RPCBitmap_BitmapReply_descriptor;
      }

      public lv.jing.taichi.web.RPCBitmap.BitmapReply getDefaultInstanceForType() {
        return lv.jing.taichi.web.RPCBitmap.BitmapReply.getDefaultInstance();
      }

      public lv.jing.taichi.web.RPCBitmap.BitmapReply build() {
        lv.jing.taichi.web.RPCBitmap.BitmapReply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public lv.jing.taichi.web.RPCBitmap.BitmapReply buildPartial() {
        lv.jing.taichi.web.RPCBitmap.BitmapReply result = new lv.jing.taichi.web.RPCBitmap.BitmapReply(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.highbits_ = highbits_;
        result.bitmaps_ = internalGetBitmaps();
        result.bitmaps_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof lv.jing.taichi.web.RPCBitmap.BitmapReply) {
          return mergeFrom((lv.jing.taichi.web.RPCBitmap.BitmapReply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(lv.jing.taichi.web.RPCBitmap.BitmapReply other) {
        if (other == lv.jing.taichi.web.RPCBitmap.BitmapReply.getDefaultInstance()) return this;
        if (other.getHighbits() != 0) {
          setHighbits(other.getHighbits());
        }
        internalGetMutableBitmaps().mergeFrom(
            other.internalGetBitmaps());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        lv.jing.taichi.web.RPCBitmap.BitmapReply parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (lv.jing.taichi.web.RPCBitmap.BitmapReply) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int highbits_ ;
      /**
       * <code>int32 highbits = 1;</code>
       */
      public int getHighbits() {
        return highbits_;
      }
      /**
       * <code>int32 highbits = 1;</code>
       */
      public Builder setHighbits(int value) {
        
        highbits_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 highbits = 1;</code>
       */
      public Builder clearHighbits() {
        
        highbits_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, com.google.protobuf.ByteString> bitmaps_;
      private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
      internalGetBitmaps() {
        if (bitmaps_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              BitmapsDefaultEntryHolder.defaultEntry);
        }
        return bitmaps_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
      internalGetMutableBitmaps() {
        onChanged();;
        if (bitmaps_ == null) {
          bitmaps_ = com.google.protobuf.MapField.newMapField(
              BitmapsDefaultEntryHolder.defaultEntry);
        }
        if (!bitmaps_.isMutable()) {
          bitmaps_ = bitmaps_.copy();
        }
        return bitmaps_;
      }

      public int getBitmapsCount() {
        return internalGetBitmaps().getMap().size();
      }
      /**
       * <code>map&lt;int32, bytes&gt; bitmaps = 2;</code>
       */

      public boolean containsBitmaps(
          int key) {
        
        return internalGetBitmaps().getMap().containsKey(key);
      }
      /**
       * Use {@link #getBitmapsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getBitmaps() {
        return getBitmapsMap();
      }
      /**
       * <code>map&lt;int32, bytes&gt; bitmaps = 2;</code>
       */

      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getBitmapsMap() {
        return internalGetBitmaps().getMap();
      }
      /**
       * <code>map&lt;int32, bytes&gt; bitmaps = 2;</code>
       */

      public com.google.protobuf.ByteString getBitmapsOrDefault(
          int key,
          com.google.protobuf.ByteString defaultValue) {
        
        java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
            internalGetBitmaps().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, bytes&gt; bitmaps = 2;</code>
       */

      public com.google.protobuf.ByteString getBitmapsOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
            internalGetBitmaps().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearBitmaps() {
        internalGetMutableBitmaps().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, bytes&gt; bitmaps = 2;</code>
       */

      public Builder removeBitmaps(
          int key) {
        
        internalGetMutableBitmaps().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
      getMutableBitmaps() {
        return internalGetMutableBitmaps().getMutableMap();
      }
      /**
       * <code>map&lt;int32, bytes&gt; bitmaps = 2;</code>
       */
      public Builder putBitmaps(
          int key,
          com.google.protobuf.ByteString value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableBitmaps().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, bytes&gt; bitmaps = 2;</code>
       */

      public Builder putAllBitmaps(
          java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> values) {
        internalGetMutableBitmaps().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:RPCBitmap.BitmapReply)
    }

    // @@protoc_insertion_point(class_scope:RPCBitmap.BitmapReply)
    private static final lv.jing.taichi.web.RPCBitmap.BitmapReply DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new lv.jing.taichi.web.RPCBitmap.BitmapReply();
    }

    public static lv.jing.taichi.web.RPCBitmap.BitmapReply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BitmapReply>
        PARSER = new com.google.protobuf.AbstractParser<BitmapReply>() {
      public BitmapReply parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new BitmapReply(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BitmapReply> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BitmapReply> getParserForType() {
      return PARSER;
    }

    public lv.jing.taichi.web.RPCBitmap.BitmapReply getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RPCBitmap_BitmapRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RPCBitmap_BitmapRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RPCBitmap_BitmapReply_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RPCBitmap_BitmapReply_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RPCBitmap_BitmapReply_BitmapsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RPCBitmap_BitmapReply_BitmapsEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017bmservice.proto\022\tRPCBitmap\".\n\rBitmapRe" +
      "quest\022\017\n\007bizname\030\001 \001(\t\022\014\n\004date\030\002 \001(\t\"\205\001\n" +
      "\013BitmapReply\022\020\n\010highbits\030\001 \001(\005\0224\n\007bitmap" +
      "s\030\002 \003(\0132#.RPCBitmap.BitmapReply.BitmapsE" +
      "ntry\032.\n\014BitmapsEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005val" +
      "ue\030\002 \001(\014:\0028\0012M\n\nPostBitmap\022?\n\tgetBitmap\022" +
      "\030.RPCBitmap.BitmapRequest\032\026.RPCBitmap.Bi" +
      "tmapReply\"\000B\'\n\030lv.jing.taichi.webB" +
      "\tRPCBitmapP\000b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_RPCBitmap_BitmapRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_RPCBitmap_BitmapRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RPCBitmap_BitmapRequest_descriptor,
        new java.lang.String[] { "Bizname", "Date", });
    internal_static_RPCBitmap_BitmapReply_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_RPCBitmap_BitmapReply_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RPCBitmap_BitmapReply_descriptor,
        new java.lang.String[] { "Highbits", "Bitmaps", });
    internal_static_RPCBitmap_BitmapReply_BitmapsEntry_descriptor =
      internal_static_RPCBitmap_BitmapReply_descriptor.getNestedTypes().get(0);
    internal_static_RPCBitmap_BitmapReply_BitmapsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RPCBitmap_BitmapReply_BitmapsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
